// Decompiled by DJ v3.12.12.96 Copyright 2011 Atanas Neshkov  Date: 3/9/2012 11:11:53 PM
// Home Page: http://members.fortunecity.com/neshkov/dj.html http://www.neshkov.com/dj.html - Check often for new version!
// Decompiler options: packimports(3) 
// Source File Name:   bLiftPlayerListener.java

package com.bradsproject.BradleyJewell.bLift;

import java.util.HashMap;
import org.bukkit.Material;
import org.bukkit.block.*;
import org.bukkit.event.block.Action;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.event.player.PlayerListener;

// Referenced classes of package com.bradsproject.BradleyJewell.bLift:
//            MultiElevator, bLift

public class bLiftPlayerListener extends PlayerListener
{

    public bLiftPlayerListener(bLift instance)
    {
        plugin = null;
        plugin = instance;
    }

    public void onPlayerInteract(PlayerInteractEvent event)
    {
        if(event.getAction().equals(Action.RIGHT_CLICK_BLOCK) && event.getClickedBlock().getType().equals(Material.WALL_SIGN))
        {
            Sign sign = (Sign)event.getClickedBlock().getState();
            MultiElevator lift = new MultiElevator(plugin, event.getClickedBlock().getFace(BlockFace.DOWN), false);
            if(lift.isMulti)
            {
                int curFloor;
                try
                {
                    curFloor = Integer.parseInt(sign.getLine(1));
                }
                catch(Exception e)
                {
                    curFloor = 0;
                }
                int curDest;
                try
                {
                    curDest = Integer.parseInt(sign.getLine(3));
                }
                catch(Exception e)
                {
                    curDest = 1;
                }
                int nextDest = 1;
                if(lift.floors.containsKey(Integer.valueOf(curDest + 1)))
                    nextDest = curDest + 1;
                if(nextDest == curFloor)
                {
                    nextDest++;
                    if(!lift.floors.containsKey(Integer.valueOf(nextDest)))
                        nextDest = 1;
                }
                sign.setLine(3, Integer.toString(nextDest));
                sign.update();
            }
        }
    }

    private bLift plugin;
}